name: Rust

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:

  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Start K3S
        uses: debianmaster/actions-k3s@v1.0.3
        id: k3s
        with:
          version: 'latest'
      - uses: Swatinem/rust-cache@v1.3.0
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: test
      - uses: actions-rs/cargo@v1.0.3
        name: Run ignored-by-default tests
        with:
          command: test
          args: -- --ignored --test-threads=1
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: clean

  rustfmt:
    name: Run rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  doc:
    name: Run rustdoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - uses: Swatinem/rust-cache@v1.3.0
      - uses: actions-rs/cargo@v1.0.3
        with:
          command: doc
          args: --document-private-items

  clippy:
    name: Run clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions-rs/toolchain@v1.0.7
        with:
            profile: minimal
            toolchain: stable
            components: clippy
            override: true
      - uses: Swatinem/rust-cache@v1.3.0
      # We need this due to: https://github.com/actions-rs/clippy-check/issues/2
      - name: Check workflow permissions
        id: check_permissions
        uses: scherermichael-oss/action-has-permission@1.0.6
        with:
          required-permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run clippy action to produce annotations
        uses: actions-rs/clippy-check@v1
        if: steps.check_permissions.outputs.has-permission
        with:
          args: --all-targets -- -D warnings
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run clippy manually without annotations
        if: ${{ !steps.check_permissions.outputs.has-permission }}
        run: cargo clippy --all-targets -- -D warnings

  cargo-deny:
    name: Run cargo deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - uses: actions/checkout@v2.4.0
    - uses: EmbarkStudios/cargo-deny-action@v1.2.6
      with:
        command: check ${{ matrix.checks }}
