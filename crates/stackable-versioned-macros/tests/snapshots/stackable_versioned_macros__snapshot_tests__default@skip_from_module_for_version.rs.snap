---
source: crates/stackable-versioned-macros/src/lib.rs
expression: formatted
input_file: crates/stackable-versioned-macros/tests/inputs/default/pass/skip_from_module_for_version.rs
---
#[automatically_derived]
pub(crate) mod v1alpha1 {
    use super::*;
    pub struct Foo {
        pub bar: usize,
    }
    pub struct Bar {
        pub foo: usize,
    }
}
#[automatically_derived]
impl ::std::convert::From<v1alpha1::Foo> for v1beta1::Foo {
    fn from(__sv_foo: v1alpha1::Foo) -> Self {
        Self {
            bar: __sv_foo.bar.into(),
            baz: ::std::default::Default::default(),
        }
    }
}
#[automatically_derived]
impl ::std::convert::From<v1alpha1::Bar> for v1beta1::Bar {
    fn from(__sv_bar: v1alpha1::Bar) -> Self {
        Self {
            foo: __sv_bar.foo.into(),
            faz: ::std::default::Default::default(),
        }
    }
}
#[automatically_derived]
pub(crate) mod v1beta1 {
    use super::*;
    pub struct Foo {
        pub bar: usize,
        pub baz: bool,
    }
    pub struct Bar {
        pub foo: usize,
        pub faz: bool,
    }
}
#[automatically_derived]
pub(crate) mod v1 {
    use super::*;
    pub struct Foo {
        pub bar: usize,
        pub baz: bool,
    }
    pub struct Bar {
        pub foo: usize,
        pub faz: bool,
    }
}
