---
source: crates/stackable-versioned-macros/src/lib.rs
expression: formatted
input_file: crates/stackable-versioned-macros/tests/inputs/default/pass/generics_struct.rs
---
#[automatically_derived]
pub mod v1alpha1 {
    use super::*;
    pub struct Foo<T>
    where
        T: Default,
    {
        pub bar: T,
        pub baz: u8,
    }
}
#[automatically_derived]
impl<T> ::std::convert::From<v1alpha1::Foo<T>> for v1::Foo<T>
where
    T: Default,
{
    fn from(__sv_foo: v1alpha1::Foo<T>) -> Self {
        Self {
            bar: __sv_foo.bar.into(),
            baz: __sv_foo.baz.into(),
        }
    }
}
#[automatically_derived]
impl<T> ::std::convert::From<v1::Foo<T>> for v1alpha1::Foo<T>
where
    T: Default,
{
    fn from(__sv_foo: v1::Foo<T>) -> Self {
        Self {
            bar: __sv_foo.bar.into(),
            baz: __sv_foo.baz.into(),
        }
    }
}
#[automatically_derived]
pub mod v1 {
    use super::*;
    pub struct Foo<T>
    where
        T: Default,
    {
        pub bar: T,
        pub baz: u8,
    }
}
