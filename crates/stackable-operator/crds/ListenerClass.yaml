---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: listenerclasses.listeners.stackable.tech
spec:
  group: listeners.stackable.tech
  names:
    categories: []
    kind: ListenerClass
    plural: listenerclasses
    shortNames: []
    singular: listenerclass
  scope: Cluster
  versions:
  - additionalPrinterColumns: []
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for ListenerClassSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Defines a policy for how [Listeners](https://docs.stackable.tech/home/nightly/listener-operator/listener) should be exposed.
              Read the [ListenerClass documentation](https://docs.stackable.tech/home/nightly/listener-operator/listenerclass)
              for more information.
            properties:
              loadBalancerAllocateNodePorts:
                default: true
                description: |-
                  Configures whether a LoadBalancer service should also allocate node ports (like NodePort).

                  Ignored unless serviceType is LoadBalancer.
                type: boolean
              loadBalancerClass:
                description: |-
                  Configures a custom Service loadBalancerClass, which can be used to access secondary
                  load balancer controllers that are installed in the cluster, or to provision
                  custom addresses manually.

                  Ignored unless serviceType is LoadBalancer.
                nullable: true
                type: string
              pinnedNodePorts:
                default: false
                description: |-
                  Whether or not a Pod exposed using a NodePort should be pinned to a specific Kubernetes node.

                  By pinning the Pod to a specific (stable) Kubernetes node, stable addresses can be
                  provided using NodePorts. The pinning is achieved by listener-operator setting the
                  `volume.kubernetes.io/selected-node` annotation on the Listener PVC.

                  However, this only works on setups with long-living nodes. If your nodes are rotated on
                  a regular basis, the Pods previously running on a removed node will be stuck in Pending
                  until you delete the PVC with the pinning.

                  Because of this we don't enable pinning by default to support all environments.
                type: boolean
              preferredAddressType:
                default: HostnameConservative
                description: |-
                  Whether addresses should prefer using the IP address (`IP`) or the hostname (`Hostname`).
                  Can also be set to `HostnameConservative`, which will use `IP` for `NodePort` service types, but `Hostname` for everything else.

                  The other type will be used if the preferred type is not available.

                  Defaults to `HostnameConservative`.
                enum:
                - Hostname
                - IP
                - HostnameConservative
                type: string
              serviceAnnotations:
                additionalProperties:
                  type: string
                default: {}
                description: Annotations that should be added to the Service object.
                type: object
              serviceExternalTrafficPolicy:
                anyOf:
                - description: |-
                    Service Internal Traffic Policy enables internal traffic restrictions to only route internal
                    traffic to endpoints within the node the traffic originated from. The "internal" traffic
                    here refers to traffic originated from Pods in the current cluster. This can help to reduce
                    costs and improve performance. See [Kubernetes docs][k8s-docs].

                    [k8s-docs]: https://kubernetes.io/docs/concepts/services-networking/service-traffic-policy/
                  enum:
                  - Cluster
                  - Local
                  type: string
                - enum:
                  - null
                  nullable: true
                description: |-
                  `externalTrafficPolicy` that should be set on the created Service objects.

                  It is a Kubernetes feature that controls how external traffic is routed to a Kubernetes
                  Service.

                  * `Cluster`: Kubernetes default. Traffic is routed to any node in the Kubernetes cluster that
                    has a pod running the service.
                  * `Local`: Traffic is only routed to pods running on the same node as the Service.

                  The `Local` mode has better performance as it avoids a network hop, but requires a more
                  sophisticated LoadBalancer, that respects what Pods run on which nodes and routes traffic only
                  to these nodes accordingly. Some cloud providers or bare metal installations do not implement
                  some of the required features.
              serviceType:
                description: The method used to access the services.
                enum:
                - NodePort
                - LoadBalancer
                - ClusterIP
                type: string
            required:
            - serviceType
            type: object
        required:
        - spec
        title: ListenerClass
        type: object
    served: true
    storage: true
    subresources: {}
